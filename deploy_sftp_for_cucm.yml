---
- name: Deploy SFTP backup endpoint for Cisco UC apps on Minikube
  hosts: localhost
  gather_facts: false

  vars:
    ns: backup-sftp
    app_name: sftp-cucm
    pvc_size: 200Gi
    retention_days: 14

    # Use NodePort on Minikube for simple external access (no tunnel required)
    service_type: NodePort
    node_port: 30222

    # Lock access to UC cluster IPs only (CUCM + IM&P only; Unity removed)
    restrict_ingress: true
    allowed_uc_cidrs:
      - "10.1.128.14/32"   # CUCM Publisher
      - "10.1.128.15/32"   # CUCM Subscriber
      - "10.1.128.20/32"   # IM&P (Presence) Publisher
      - "10.1.128.21/32"   # IM&P (Presence) Subscriber

  collections:
    - kubernetes.core
    - community.general

  tasks:
    - name: Generate strong password for SFTP user (independent of Cisco admin creds)
      community.general.random_string:
        length: 24
        upper: true
        lower: true
        digits: true
        special: false
      register: gen_pass

    - name: Create namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ ns }}"

    - name: Create PVC for SFTP data
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: "{{ app_name }}-data"
            namespace: "{{ ns }}"
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: "{{ pvc_size }}"

    - name: Secret with users.conf (atmoz/sftp requires this)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ app_name }}-users"
            namespace: "{{ ns }}"
          type: Opaque
          stringData:
            # format: user:password:uid:gid:dir
            users.conf: |
              cucm:{{ gen_pass.random_string }}:1001:1001:upload

    - name: SSHD config (compatible KEX/Ciphers/MACs for CUCM 11.5+)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ app_name }}-sshd"
            namespace: "{{ ns }}"
          data:
            sshd_config: |
              Port 22
              Protocol 2
              HostKey /etc/ssh/ssh_host_rsa_key
              HostKey /etc/ssh/ssh_host_ecdsa_key
              HostKey /etc/ssh/ssh_host_ed25519_key
              KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
              Ciphers aes256-ctr,aes192-ctr,aes128-ctr
              MACs hmac-sha2-512,hmac-sha2-256
              Subsystem sftp internal-sftp
              PasswordAuthentication yes
              PermitTunnel no
              AllowTcpForwarding no
              X11Forwarding no
              # Chroot and SFTP-only
              Match User cucm
                ChrootDirectory /home/%u
                ForceCommand internal-sftp
                AllowAgentForwarding no
                AllowTcpForwarding no
                X11Forwarding no

    - name: Deploy SFTP server (atmoz/sftp)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ app_name }}"
            namespace: "{{ ns }}"
            labels: { app: "{{ app_name }}" }
          spec:
            replicas: 1
            selector:
              matchLabels: { app: "{{ app_name }}" }
            template:
              metadata:
                labels: { app: "{{ app_name }}" }
              spec:
                securityContext:
                  fsGroup: 1001
                containers:
                  - name: sftp
                    image: atmoz/sftp:latest
                    imagePullPolicy: IfNotPresent
                    args: ["-f","-e"]  # log to stderr
                    ports:
                      - containerPort: 22
                    volumeMounts:
                      - name: data
                        mountPath: /home
                      - name: users
                        mountPath: /etc/sftp
                        readOnly: true
                      - name: sshd
                        mountPath: /etc/ssh/sshd_config
                        subPath: sshd_config
                    resources:
                      requests:
                        cpu: "100m"
                        memory: "256Mi"
                      limits:
                        cpu: "500m"
                        memory: "1Gi"
                volumes:
                  - name: data
                    persistentVolumeClaim:
                      claimName: "{{ app_name }}-data"
                  - name: users
                    secret:
                      secretName: "{{ app_name }}-users"
                  - name: sshd
                    configMap:
                      name: "{{ app_name }}-sshd"

    - name: Expose SFTP via NodePort
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ app_name }}"
            namespace: "{{ ns }}"
            labels: { app: "{{ app_name }}" }
          spec:
            type: "{{ service_type }}"
            selector: { app: "{{ app_name }}" }
            ports:
              - name: sftp
                port: 22
                targetPort: 22
                nodePort: "{{ node_port }}"

    - name: Create NetworkPolicy to restrict SFTP to UC IPs (Unity removed)
      when: restrict_ingress
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: "{{ app_name }}-ingress"
            namespace: "{{ ns }}"
          spec:
            podSelector:
              matchLabels:
                app: "{{ app_name }}"
            policyTypes: ["Ingress"]
            ingress:
              - from:
                  - ipBlock: { cidr: "10.1.128.14/32" }
                  - ipBlock: { cidr: "10.1.128.15/32" }
                  - ipBlock: { cidr: "10.1.128.20/32" }
                  - ipBlock: { cidr: "10.1.128.21/32" }
                ports:
                  - protocol: TCP
                    port: 22

    - name: Wait for SFTP pod to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ ns }}"
        label_selectors:
          - "app={{ app_name }}"
      register: podinfo
      until: >
        podinfo.resources|length > 0 and
        (podinfo.resources[0].status.containerStatuses is defined) and
        (podinfo.resources[0].status.containerStatuses[0].ready | bool)
      retries: 20
      delay: 5

    - name: Show connection details for UC DRS
      debug:
        msg:
          - "SFTP user     : cucm"
          - "SFTP password : {{ gen_pass.random_string }}"
          - "SFTP dir      : /upload"
          - "Service type  : NodePort"
          - "Connect to    : $(minikube ip) on TCP {{ node_port }}"
          - "In CUCM/IM&P DRS use: Host=$(minikube ip), Port={{ node_port }}, User=cucm, Dir=/upload"
